
### Return / Exit

-   `exit 0` means successful execution.
-   `exit 1+` means error occurred.
-   `$?` gives exit status of the last executed instruction.

### Bash vs C/C++

-   In Bash, 0 means success; in C/C++, 0 means false.
-   Successful execution of a bash script returns 0, triggering an `if` statement.

### Local Variables in Bash

-   All variables in Bash are global by default.
-   Declare a variable as `local` to limit its scope to the function.

### Subshells

-   Invoked using syntax like `a=$(ls)`.
-   They have their own scope; variables defined inside a subshell aren't accessible outside of it.
-   `$PPID` provides the current process ID; `$BASH_SUBSHELL` provides the subshell level.

